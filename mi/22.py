def solution(line):
    # 缩进请使用 4 个空格，遵循 PEP8 规范
    # please write your code here

    # return 'your_answer'
    int_line = int(line)
    # s_20 = '12345678987654321234'
    i = 1
    while i:
        if i*(i+1) >= 2*int_line:
            break
        if i < 5000:
            i += 96
        elif i < 20000:
            i += 48
        else:
            i += 16

    base_list = ['1', '2', '3', '4', '5', '6', '7', '8', '9',
                 '8', '7', '6', '5', '4', '3', '2']

    n = (i+1) // 16 + 1

    s_20_list = base_list*n
    # while i+1 > len(s_20_list):
    #     s_20_list += base_list*3

    s = []
    while s_20_list:

        s = [''.join(s_20_list)] + s
        # s.append(''.join(s_20_list))
        s_20_list.pop()

    ss = ''
    # s.reverse()
    # print(s)
    # print(s_20_list)
    for x in s:
        ss += x
    # print(ss)

    return ss[int(line)-1]

    # s_n_base = ['1', '12', '123', '1234', '12345', '123456', '1234567', '12345678', '123456789', '1234567898',
    #             '12345678987', '123456789876', '1234567898765', '12345678987654', '123456789876543', '1234567898765432']
    # s = ''
    # n = 0
    # s_16 = ''
    # while n < int_line:
    #     j = n % 16
    #
    #     if n == 16:
    #         s_16 = s
    #     elif n > 15:
    #         s += s_16+s_n_base[j]
    #     else:
    #         s += s_n_base[j]
    #
    #     n += 1
    #
    # print(s)

    # if int_line >= 16:
    #     i = (int_line-1) % 16
    #     j = int_line // 16
    # else:
    #     i = int_line
    # s_key = '1234567898765432'
    # i = (int_line - 1) % 16
    #
    # def s_n(i):
    #
    #     if i == 0:
    #         return s_key[i]
    #     else:
    #         return s_n(i-1) + s_key[i]
    # print(s_n(i))
    # return [s_n(x) for x in range(i+1)]

    # s1 = s_key[0]
    # s2 = s1 + s_key[1]
    # print(s1, s2)

    # x = 1
    # s = ''
    # while x < 10:
    #     for n in range(1, x+1):
    #         s += str(n)
    #
    #     x += 1
    # print(s)
    # xx = 10
    # ss = ''
    # while xx < 18:
    #     for n in range(10, xx+1):
    #         ss += str(n-9)
    #     xx += 1
    # print(ss)
    # n = 0
    # x = 1
    # n_list = [0]
    # t = 1
    # while x < 200:
    #     n += t
    #     if t < 9:
    #         t += 1
    #     else:
    #         t -= 1
    #
    #     n_list.append(n)
    #     x += 1
    # print(n_list)

    # int_line = int(line)
    # n_list = [0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 53, 62, 70, 79, 87, 96, 104, 113, 121, 130, 138, 147, 155, 164, 172, 181, 189, 198, 206, 215, 223, 232, 240, 249, 257, 266, 274, 283, 291, 300, 308, 317, 325, 334, 342, 351, 359, 368, 376, 385, 393, 402, 410, 419, 427, 436, 444, 453, 461, 470, 478, 487, 495, 504, 512, 521, 529, 538, 546, 555, 563, 572, 580, 589, 597, 606, 614, 623, 631, 640, 648, 657, 665, 674, 682, 691, 699, 708, 716, 725, 733, 742, 750, 759, 767, 776, 784, 793, 801, 810, 818, 827, 835, 844, 852, 861, 869, 878, 886, 895, 903, 912, 920, 929, 937, 946, 954, 963, 971, 980, 988, 997, 1005, 1014, 1022, 1031, 1039, 1048, 1056, 1065, 1073, 1082, 1090, 1099, 1107, 1116, 1124, 1133, 1141, 1150, 1158, 1167, 1175, 1184, 1192, 1201, 1209, 1218, 1226, 1235, 1243, 1252, 1260, 1269, 1277, 1286, 1294, 1303, 1311, 1320, 1328, 1337, 1345, 1354, 1362, 1371, 1379, 1388, 1396, 1405, 1413, 1422, 1430, 1439, 1447, 1456, 1464, 1473, 1481, 1490, 1498, 1507, 1515, 1524, 1532, 1541, 1549, 1558, 1566, 1575, 1583, 1592, 1600, 1609, 1617, 1626, 1634, 1643, 1651, 1660]
    #
    # for i in range(1, len(n_list)-1):
    #     if int_line <= n_list[i]:
    #         if i < 10:
    #             j_list = [j + 1 for j in range(n_list[i] - n_list[i - 1])]
    #             print(j_list)
    #
    #             return j_list[int_line - n_list[i] - 1]
    #
    #         else:
    #             j_list = [9 - j - 1 for j in range(n_list[i] - n_list[i - 1])]
    #             print(j_list)
    #
    #             return j_list[int_line - n_list[i] - 1]

    # base_dict = {
    #     '1': 1,
    #     '2': 1,
    #     '3': 2,
    #     '4': 1,
    #     '5': 2,
    #     '6': 3,
    #     '7': 1,
    #     '8': 2,
    #     '9': 3,
    #     '10': 4,
    #     '11': 1,
    #     '12': 2,
    #     '13': 3,
    #     '14': 4,
    #     '15': 5,
    #     '16': 1,
    #     '17': 2,
    #     '18': 3,
    #     '19': 4,
    #     '20': 5,
    # }
    #
    # return base_dict[line]

aa = solution("1000000")
print(aa)
